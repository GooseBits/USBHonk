from typing import List
import time

from pypsi.completers import command_completer
from pypsi.core import Command, PypsiArgParser, CommandShortCircuit
from pypsi.shell import Shell
from pypsi.ansi import AnsiCodes

from usbhonk.usb.gadgets.razer_attack import RazerAttack


class ExploitCommand(Command):

    def __init__(self):
        self.parser = PypsiArgParser('wifi')
        exploit = self.parser.add_subparsers(dest='exploit')

        exploit.add_parser('razer')

        super().__init__(name='exploit', brief='launch exploits',
                         usage=self.parser.format_usage())

    def complete(self, shell, args, prefix):
        return command_completer(self.parser, shell, args, prefix, case_sensitive=True)

    def run(self, shell: Shell, params: List[str]) -> int:
        try:
            args = self.parser.parse_args(params)
        except CommandShortCircuit as err:
            return err.code

        if args.exploit == "razer":
            rc = self.launch_razer(shell)

        return rc

    def launch_razer(self, shell: Shell) -> int:
        if shell.ctx.default_gadget.lun1.file:
            self.error(shell, "eject the secure disk from the host first")
            return -1

        # Deactivate our default gadget
        shell.ctx.default_gadget.active = False

        # Activate the razer attack
        razer = RazerAttack()
        razer.active = True
        print("razer attack:", AnsiCodes.red("active"))

        time.sleep(20)

        # Return to normal
        print("razer attack:", AnsiCodes.green("complete"))
        razer.active = False
        shell.ctx.default_gadget.active = True
